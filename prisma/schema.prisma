// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  projects  Project[] // Relación: Un usuario puede tener varios proyectos
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Project {
  id        String   @id @default(uuid())
  name      String
  userId    String   // Clave foránea a User
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  events    Event[]  // Relación: Un proyecto puede tener varios eventos
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id          String   @id @default(uuid())
  cycle       String   // clasificacion segun el ciclo de vida del usuario
  title       String   // NOMBRE DEL EVENTO
  socialMedia String   // RED SOCIAL (Ej: "Instagram", "Twitter")
  category    String   // CATEGORÍA (Ej: "Marketing", "Educación")
  objective   String   // OBJETIVO (Ej: "Aumentar engagement")
  format      String   // FORMATO (Ej: "Video", "Imagen", "Texto")
  text        String   // TEXTO PRINCIPAL DE LA PUBLICACIÓN
  hashtags    String?  // HASHSTAGS Y MENCIONES (Opcional)
  time        DateTime // HORA DEL EVENTO
  status      String   // ESTADO (Ej: "Pendiente", "Publicado")
  projectId   String   // Clave foránea a Project
  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

